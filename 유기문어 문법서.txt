# 유기문어 문법 설명서 (Yugimunu Language Manual) — 확장판

---

## 📌 기본 개념
- 감정 서사 기반 난해한 언어로, 캐릭터의 생사 및 관계성에 따라 연산 제약이 달라짐
- 캐릭터 이름은 변수처럼 작동하며, 감정 표현으로 연산과 제어문을 구현
- 주어와 목적어 관계, 그리고 감정 동사가 코드의 핵심 연산자로 작용

---

## 🔤 등장 인물 (변수)
| 이름     | 생존 여부 | 비고               |
|----------|-----------|--------------------|
| 경민     | 자유      | 주인공, 모든 연산 자유    |
| 한별     | 사망      | 솔빈과 앙숙           |
| 솔빈     | 사망      | 한별과 앙숙           |
| 츠카사   | 생존      | 윤설과 앙숙, 메인 히로인  |
| 윤설     | 생존      | 츠카사와 앙숙         |

---

## 🧮 연산자 정의 (감정 기반 연산)
| 표현         | 의미       | 연산자 | 사용 조건   |
|--------------|------------|--------|-------------|
| 사랑했다     | 더하기     | +      | 생존자 전용   |
| 껴안았다     | 곱하기     | *      | 생존자 전용   |
| 증오했다     | 빼기       | -      | 사망자 전용   |
| 밀어냈다     | 나누기     | //     | 사망자 전용   |
| 잊었다       | 초기화     | = 0    | 누구나 사용 가능 |

> 경민이는 모든 연산 자유롭게 사용 가능

---

## ⚠️ 제약 조건
- **주어와 목적어가 같은 인물**인 경우는 금지.  
- 같은 생존자끼리는 앙숙 관계일 경우 함께 사용 불가  
- 같은 사망자끼리도 앙숙이면 함께 사용 불가  
- 입력/출력 시 변수와 문자열 리터럴을 구분해야 함
- 은/는, 이/가, 을/를 같은 조사는 기본적으로 모두 입력받고, 출력 시에는 자연스럽게 변환.

---

## 💬 주석 문법
- `#` 뒤에 오는 내용은 주석 처리됨  
```yugimunu
# 이 줄은 주석입니다
경민이 윤설을 사랑했다 # 윤설에게 사랑 표현
```

---

## 🧾 조건문 (if / else / endif)

| 구문 예시                                    | 의미               |
|---------------------------------------------|--------------------|
| 경민이 "한별"은 5를 이해했다고 생각했다         | if 한별 == 5       |
| 경민이 "윤설"은 "츠카사"을 이해하지 못했다고 생각했다 | if 윤설 != 츠카사  |
| 경민이 "한별"은 3보다 크다고 또한 5보다 작다고 생각했다     | if 한별 > 3 그리고 한별 < 5  (AND) |
| 경민이 생각을 바꿨다                            | else               |
| 경민이 생각을 그만뒀다                            | endif              |

- **복합 조건문** 지원: `또한`, `또는`으로 AND, OR 표현 가능  
- 비교 연산자: `크다`(>), `작다`(<), `이해했다`(==), `이해하지 못했다`(!=)  
- 문자열, 숫자 리터럴 모두 비교 가능

---

## 🔁 반복문 (while / endwhile)

| 구문 예시           | 의미           |
|--------------------|----------------|
| 경민이 루프를 시작했다 | while 시작      |
| 경민이 루프를 종료했다 | while 종료      |
| 경민이 루프를 건너뛰었다 | continue (선택적)  |
| 경민이 루프를 깨뜨렸다   | break (선택적)   |

---

## 📥 입력 / 📤 출력

| 구문                          | 의미                      |
|-----------------------------|---------------------------|
| 경민이 "X"을 들었다               | 문자열 리터럴 "X" 입력받기     |
| 경민이 X를 들었다                | 변수 X 입력받기              |
| 경민이 "X"을 말했다               | 문자열 리터럴 "X" 출력하기     |
| 경민이 X를 말했다                | 변수 X 값 출력하기            |

---

## 📜 문자열과 숫자 리터럴

- 문자열은 반드시 쌍따옴표 `" "` 안에 표기  
- 숫자는 정수만 지원 (추후 부동소수점 확장 가능)  
- 변수 이름과 리터럴은 문법상 명확히 구분되어야 함

---

## ✅ 연산 구문 예시

```yugimunu
솔빈이 윤설을 증오했다  # 윤설 -= 1 (사망자 연산)
윤설이 경민을 사랑했다  # 경민 += 1 (생존자 연산)
경민이 한별을 껴안았다  # 한별 *= 경민
윤설이 솔빈을 잊었다    # 솔빈 = 0
경민이 경민을 사랑했다  # 경민 += 1 (스스로 사랑 예외)
```

---

## 🔄 예외 및 오류 처리 (감정적 에러)

- 오류 발생 시 감정 서사적 문구로 표현 가능  
- 예) `경민은 혼란에 빠졌다` → 실행 오류 발생 및 처리 시작  
- 예) `윤설은 실망했다` → 경고 메시지 출력

---

## 🧪 전체 예제

```yugimunu
# 유기문어 실행 예제

경민이 "윤설"을 들었다
윤설이 경민을 사랑했다

경민이 "윤설"이 경민을 이해했다고 생각했다
    경민이 "윤설"을 말했다
경민이 생각을 바꿨다
    경민이 "솔빈"을 잊었다
경민이 생각을 그만뒀다

경민이 루프를 시작했다
    윤설이 경민을 껴안았다
    윤설이 경민을 증오했다
    경민이 루프를 깨뜨렸다
경민이 루프를 종료했다
```
